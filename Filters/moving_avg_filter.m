clear, clc, close all; % очищаем консоль, закрываем предыдущие данные

fs = 100; % частота дискретизации 100 Гц
ts = 0: 1/fs: 1-0.1/fs; % задаем массив временных отсчетов

N = length(ts); % зададим переменную равную количеству временных отсчетов
a = 1.2; % зададим шум от 1.2 до 0.1, 
b = 0.1; %это х-ки какого-то случайного сигнала
x = (a+(b-a)*rand(1,N)).*sin(2*pi*5*ts); % получили зашумленный сигнал,

%теперь отфильтруем
subplot(2,1,1); % на первом графике покажем исходный зашумленный случайный сигнал
plot(x), grid on % сетка включена

y = zeros(1,N+7); % +7 потому что начинаем фильтровать не с первого, первые 6 у нас как бы пропадают, чтобы сигнал отображался полностью. И применим фильтр скользящего среднего.
for i = 7: length(x)
    y(i) = (x(i-1)+x(i-2)+x(i-3)+x(i-4)+x(i-5)+x(i-6))*1/6;
end
subplot(2,1,2);
plot(y(1:100)), grid on % сделаем на 100 отсчетов, чтобы верхние и нижние графики совпадали по оси
