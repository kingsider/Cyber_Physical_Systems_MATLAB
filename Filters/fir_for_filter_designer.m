clear, clc, close all; % все закрываем, очищаем консоль

fs = 30000; % чатсота дискретизации 30 к√ц
ts = 0: 1/fs: 0.1-1/fs; % задаем массив временных отсчетов
N = length(ts); % задаем переменную равную количеству отсчетов

x = sin(2*pi*3000*ts) + 0.5*sin(2*pi*10000*ts); % зададим сигнал, состо€щий из 2-х составл€ющих
subplot(2,1,1); % на первом графике покажем исходный сигнал
plot(x(1:200)), grid on

kih = myfilter; % переменна€ содержаща€ функцию спроектированного фильтра
y = filter(kih.Numerator,1,x); % нумератор это числитель фильтра, набор к-тов знаменатель 1
subplot (2,1,2) % на втором графике изобразим отфильтрованный сигнал
plot(y(1:200)), grid on

figure
% f = m*fs/N
f = 0: fs/N: fs-fs/N;
f = f/1000 % частотную ось приведем в к√ц
subplot(2,1,1) % сделаем ƒѕ‘ исходного сигнала
stem(f,abs(fft(x))*2/N), grid on
subplot(2,1,2) % и отфильтрованного
stem(f,abs(fft(y))*2/N), grid on
% амплитуда немного уменьшилась, потому что любой фильтр в полосе
% пропускани€ уменьшает амплитуду. Ћепестки тоже норма дл€ фильтра
