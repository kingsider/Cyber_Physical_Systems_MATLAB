clear, clc, close all % все закрываем, очищаем консоль
fs = 15000; % частота дискретизации 15 кГц
ts = 0 : 1/fs : 0.1-1/fs; % массив временных отсчетов
N = length(ts); % переменная, содержащая количество отсчетов

% теперь зададим параметры несущей
fc = 1000; % несущая частота возьмем 500 Гц
k = 8; % коэф модуляции, возьмем 8
T_bit = 10e-3; % длительность бита 10мс

f0 = fc+k/(2*T_bit); % частота логического 0
f1 = fc-k/(2*T_bit); % частота логической 1

% рассчитываем сколько отсчетов потребуется чтобы передать 1 бит

NF_bit = T_bit*fs; % получаем количество которые требуются для передачи данных

code = [1 1 0 1 1 1 0 0 0 1]; % последовательность значений берем как в 1 задании
% растянем массив данных на весь интервал, в течение которого идет передача
% данных 
fm = repelem(code, NF_bit); % последовательность, которая в каждый момент 
% времени содержит информацию по частоте, которая там должна быть
% создадим сигналы которые имеют несущие частоты

x0 = cos(2*pi*f0*ts); % для логического нуля
x1 = cos(2*pi*f1*ts); % для логической 1
x = zeros(1,N); % пустой массив, состоящий из N отсчетов

for i=1:N
   if fm(i) == 0 % если сигнал который мы получили равен 0, тогда
       x(i) = x0(i); 
   else
       x(i) = x1(i); % иначе, если там 1, то к сигналу х мы приравняем значение синусоиды
       % которая соответствует 1
   end
end

plot(ts, x), grid on, hold on;
plot(ts,fm);

y0 = x.*x0; % умножим почленно сигнал на частоту, которая соответствует лог 0
y1 = x.*x1; % и лог 1

% найдем разность 
y = y1-y0;
% построим графики 
subplot(3,1,1);
plot(y0), grid on;
title('Результат почленного умножения сигнала на частоту, которая соответствует лог 0');
subplot(3,1,2);
plot(y1), grid on;
title('Результат почленного умножения сигнала на частоту, которая соответствует лог 1');
subplot(3,1,3);
plot(y), grid on;
title('Разность сигналов');
% для демодуляции применим фильтр, спроектируем его в filterdesigner и
% экспортируем его в функцию матлаба
% параметры фильтра
%Fs = 15000;  % Sampling Frequency

%Fpass = 600;             % Passband Frequency
%Fstop = 1000;             % Stopband Frequency
%Dpass = 0.057501127785;  % Passband Ripple
%Dstop = 0.0001;          % Stopband Attenuation
%dens  = 20;              % Density Factor
fil = FSK_FILTER_LOWPASS;
y_dem = filter(fil.Numerator,1,y);
figure 
subplot(2,1,1);
plot(ts, y_dem), grid on;

d = y_dem>0.1; %если больше 0.1, значит 1, если меньше, то 0
subplot(2,1,2);
plot(ts, d); grid on;
