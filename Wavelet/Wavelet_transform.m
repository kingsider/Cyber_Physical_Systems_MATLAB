clear, clc, close all; % все закрываем очищаем консоль
fs = 150; % частота дискретизации 150 √ц
f1 = 10; % зададим несколько частотных составл€ющих
f2 = 15; % на 15 √ц
f3 = 25; % на 25 √ц
f4 = 30; % на 30 √ц
f5 = 50; % на 50 √ц
% и задаЄм сигнал с п€тью подр€д идущими частотами
t1= 0 : 1/fs : 1-1/fs; % массив временных отсчетов дл€ первого сигнала
lt1 = length(t1); % переменна€, равна€ количеству отсчетов
x(1: lt1)=sin(2*pi*f1*t1); % функци€ с 1-й частотной составл€ющей 

t2= 1:1/fs:2-1/fs;
lt2 = length(t2);
x(lt1+1 :lt1+lt2) = sin(2*pi*f2*t2);

t3= 2:1/fs:3-1/fs;
lt3 = length(t3);
x(lt1+lt2+1:lt1+lt2+lt3) = 0.5*sin(2*pi*f3*t3)+0.5*sin(2*pi*f1*t3);

t4= 3:1/fs:4-1/fs;
lt4 = length(t4);
x(lt1 +lt2 +lt3 +1:lt1 +lt2 +lt3+lt4) = sin(2*pi*f4*t4);

t5 = 4 : 1/fs : 5-1/fs;
lt5 = length(t5);
x(lt1 +lt2 +lt3+lt4 +1:lt1+lt2+lt3+lt4+lt5) = sin(2*pi*f5*t5);

t = [t1 t2 t3 t4 t5]; % формировани€ массива общего количества отсчетов 
% - сумма количества отсчетов дл€ каждого сигнала
N = length(t); % переменна€, равна€ общему количеству отсчетов
subplot(2,1,1) % построим получившийс€ сигнал и сделаем ƒѕ‘
plot(t,x), grid on, title('—игнал с п€тью подр€д идущими частотами')
xlabel('¬рем€'), ylabel('јмплитуда')
X = 2*abs(fft(x))/N; % нормируем частотную ось
f = 0: fs/N : fs-fs/N; 
subplot(2,1,2)
stem(f,X), grid on, title('—пектр заданного сигнала')
xlabel('„астота'), ylabel('јмплитуда')
figure
cwt(x,'amor',fs) % сделаем вейвлет преобразование
% мы знаем, что наши частоты наход€тс€ в диапазоне 5 - 50 √ц, поэтому
% сформируем банк фильтров дл€ вейвлет преобрахзовани€
fb = cwtfilterbank('SignalLength',numel(x),'SamplingFrequency',fs,...
    'FrequencyLimits',[5 50]);
figure
freqz(fb) % строим частотную характеристику фильтров
% и примен€ем сформированный набор фильтров
figure
cwt(x,'FilterBank',fb);
