clear, clc, close all % очищаем преемнные консоль и все закрываем
fs = 10000; % частота дискретизации
ts = 0: 1/fs : 0.001-1/fs;
N = length(ts); % хранит количество отсчетов нашего сигнала
x = sin(2*pi*1000*ts) + 0.5*sin(2*pi*2000*ts+2*pi/3); % исследуемый сигнал
plot(x, '-bo'), grid on, title ('Исходный сигнал') 
X = zeros(N,1); % одномерный массив из N элементов
% можно вместо последующего написать Х = fft(x) (это функция самого матлаба)
for m = 1: N
    for n = 1: N
       X(m) = X(m) + x(n)*(cos(2*pi*(n-1)*(m-1)/N)-1i*sin(2*pi*(n-1)*(m-1)/N));
% n-1 m-1 чтобы был нулевой элемент, -1i мнимая единица по сути j
    end
end
figure;
subplot(2,1,1)
stem(real(X)), grid on, title('Действительная часть Х') % стем рисует столбики, это удобнее, когда
% речь идет о спектре
subplot (2,1,2) 
stem(imag(X)), grid on, title('Мнимая часть Х')

figure;
stem(abs(X)), grid on, title ('Амплитуда')

%делаем нормирование, амплитуду, а также индексы в частоты
Xm = 2*abs(X)/N;

f = (0:N-1)*fs/N;

figure
subplot (2,1,1)
stem(f,Xm), grid on,
xlabel('Частота')
ylabel('Амплитуда')

% построим график фазы

phi = angle(X)*180/pi %переводим радианы в град
subplot (2,1,2)
stem(f,phi), grid on, 
xlabel('Частота')
ylabel('Фаза')
% получается разность фаз 120 градусов это 2пи на 3
