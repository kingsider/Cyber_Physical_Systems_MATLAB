clear; clc; close all;
 
fs = 100; % зададим частоту дискретизации
f1 = 10; % частота первого участка сигнала
f2 = 20; % частота второго участка сигнала
f3 = 30; % частота третьего участка сигнала
 
t1 = 0 : 1/fs : 1-1/fs; % первая временная ось
x1 = sin(2*pi*f1*0.5*t1); % сигнал на ервом участке
N = length(t1); % рассчитаем длину участка
ts = t1(N) + 1/fs; % значение последнего отсчета
 
t2 = ts : 1/fs : ts+1-1/fs; % сдвиг будет ts
x2 = sin(2*pi*f2*0.75*t2); 
N = length(t2); 
ts = t2(N) + 1/fs;
 
t3 = ts : 1/fs : ts+1-1/fs; % сдвиг 
x3 = sin(2*pi*f3*t3); 
ts = [t1 t2 t3]; % массив временных отсчетов
x = [x1 x2 x3]; % и мгновенных значений 
N = length(ts); % рассчитаем длину полученного сигнала
 
subplot(2,1,1); % построим в первом окне полученный сигнал
plot(x), grid on, title('Исследуемый сигнал'); 
 
X = 2*abs(fft(x))/N; % рассчет ДПФ
F = (0 : N-1)*fs/N; % нормирование частотной оси
 
subplot(2,1,2); % во второй окне построим ДПФ нашего сигнала
plot(F,X), xlim([0 50]), grid on, title('ДПФ сигнала');
figure;
 
for window=1:3 

    subplot(1,3,window);
    [w1X,freq] = wft(x,fs,'f0',window/10); % рассчет частотно временного fft
    w1X = abs(w1X); % расчет амлпитуды комплексного числа
    V = surf(ts, freq, w1X); % построим объемный график

    shading interp; % интерполирование графика

    title('Ширина окна, c', window/10); % заголовки для окон
    xlabel('Время'); ylabel('Частота'); zlabel('Амплитуда');

end
